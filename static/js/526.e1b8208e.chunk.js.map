{"version":3,"file":"static/js/526.e1b8208e.chunk.js","mappings":"kNACA,EAAyB,uBAAzB,EAAuD,qBAAvD,EAAoF,sBAApF,EAAmH,uBAAnH,EAAuJ,2BAAvJ,EAA+L,2B,0BCwF/L,EAtFe,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCC,EAAAA,EAAAA,IAAgB,CAAC,GAAvD,eAAKC,EAAL,KAAmBC,EAAnB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACY,KAAhBJ,GACJK,GAED,GAAE,IACH,IAAMA,EAAY,WAShBC,MAAM,mDAAD,OACgDN,EADhD,8CARW,CACdO,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAOHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GACJ,IAAQE,EAAYF,EAAZE,QACR,IAAKA,EAAQC,OAKX,OAJAnB,EACE,iFAEFF,EAAU,IAGZE,EAAS,IACTF,GAAU,OAAIoB,GACf,IACAE,OAAM,SAAAC,GAAG,OAAIC,QAAQvB,MAAMsB,EAAlB,GACb,EAgBD,OACE,iBAAKE,UAAWC,EAAhB,WACE,kBAAMC,SATW,SAAAC,GACnBA,EAAEC,iBACFlB,IACaiB,EAAEE,cACVC,OACN,EAIiCN,UAAWC,EAAzC,WACE,kBACED,UAAWC,EACXM,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,MAAOhC,EAAaiC,MACpBC,SAxBa,SAAAC,GACnB,IAAQH,EAAUG,EAAIC,OAAdJ,MAEJ/B,EADM,KAAV+B,EACoB,CAAEC,MAAOD,EAAMK,eACf,CAAC,EACtB,KAqBK,mBAAQC,KAAK,SAASjB,UAAWC,EAAjC,uBAIDzB,IAAS,uBAAIA,KACd,eAAIwB,UAAWC,EAAf,SACG3B,EAAO4C,KAAI,SAACC,EAAQC,GACnB,OACE,eAAIpB,UAAWC,EAAf,UACE,SAAC,KAAD,CAASoB,GAAE,kBAAaF,EAAOG,IAAMC,MAAO,CAAEC,KAAMzC,GAApD,SACGoC,EAAOM,SAFZ,UAAwCN,EAAOG,GAA/C,YAAqDF,GAMxD,QAIR,C","sources":["webpack://react-homework-template/./src/components/movies/movies.module.scss?2605","components/movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"movies_movies__6mFDm\",\"form\":\"movies_form__3yC8H\",\"input\":\"movies_input__I0YNc\",\"button\":\"movies_button__-PwtX\",\"moviesList\":\"movies_moviesList__moZIJ\",\"moviesItem\":\"movies_moviesItem__OaL3e\"};","import { useEffect, useState } from 'react';\nimport scss from './movies.module.scss';\nimport { NavLink, useSearchParams, useLocation } from 'react-router-dom';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  let [searchParams, setSearchParams] = useSearchParams({});\n  const queryParams = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (queryParams === '') return;\n    getMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const getMovies = () => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYzU0Y2I3MjliYTc5OWE4NGNiOGRhOWYzYjNjMmVkYiIsInN1YiI6IjY0NzRhNGQ5OTQwOGVjMDBlMTRkODI0MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jM0pFTGW4Ag5RFeZbbYFfkH78J8eInez-TSfyWolnBg',\n      },\n    };\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${queryParams}&include_adult=false&language=en-US&page=1`,\n      options\n    )\n      .then(response => response.json())\n      .then(response => {\n        const { results } = response;\n        if (!results.length) {\n          setError(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n          setMovies([]);\n          return;\n        }\n        setError('');\n        setMovies([...results]);\n      })\n      .catch(err => console.error(err));\n  };\n\n  const handleChange = evt => {\n    const { value } = evt.target;\n    value !== ''\n      ? setSearchParams({ query: value.toLowerCase() })\n      : setSearchParams({});\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getMovies();\n    const form = e.currentTarget;\n    form.reset();\n  };\n\n  return (\n    <div className={scss.movies}>\n      <form onSubmit={handleSubmit} className={scss.form}>\n        <input\n          className={scss.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={searchParams.query}\n          onChange={handleChange}\n        />\n        <button tipe=\"submit\" className={scss.button}>\n          Search\n        </button>\n      </form>\n      {error && <p>{error}</p>}\n      <ul className={scss.moviesList}>\n        {movies.map((result, index) => {\n          return (\n            <li className={scss.moviesItem} key={`${result.id}_${index}`}>\n              <NavLink to={`/movies/${result.id}`} state={{ from: location }}>\n                {result.title}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","queryParams","get","location","useLocation","useEffect","getMovies","fetch","method","headers","accept","Authorization","then","response","json","results","length","catch","err","console","className","scss","onSubmit","e","preventDefault","currentTarget","reset","type","autoComplete","autoFocus","placeholder","value","query","onChange","evt","target","toLowerCase","tipe","map","result","index","to","id","state","from","title"],"sourceRoot":""}