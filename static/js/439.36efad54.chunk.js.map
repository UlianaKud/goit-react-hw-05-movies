{"version":3,"file":"static/js/439.36efad54.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/movieDetails/movieDetails.module.scss?19f5","components/movieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieWrapper\":\"movieDetails_movieWrapper__xqAWG\",\"backButton\":\"movieDetails_backButton__1kggh\",\"movieInfo\":\"movieDetails_movieInfo__WxzNN\",\"movieDescription\":\"movieDetails_movieDescription__Wtu+k\",\"movieCapture\":\"movieDetails_movieCapture__y-j3K\",\"movieName\":\"movieDetails_movieName__gzB0r\",\"movieDate\":\"movieDetails_movieDate__5z+vV\",\"movieScore\":\"movieDetails_movieScore__q2euu\",\"movieTitle\":\"movieDetails_movieTitle__Srehi\",\"movieOverview\":\"movieDetails_movieOverview__PelYv\",\"movieGenres\":\"movieDetails_movieGenres__DivwV\",\"aditionalInf\":\"movieDetails_aditionalInf__mH+tl\",\"aditionalTitle\":\"movieDetails_aditionalTitle__6-7Fo\",\"liksWrapper\":\"movieDetails_liksWrapper__W7P5x\",\"movieLinks\":\"movieDetails_movieLinks__2z1fW\"};","import { useParams, NavLink, useLocation } from 'react-router-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport scss from './movieDetails.module.scss';\n\nconst MovieDetails = () => {\n  const [movieName, setMovieName] = useState('');\n  const [poster, setPoster] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [releaseDate, setReleaseDate] = useState('');\n  const [score, setScore] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w400';\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n  \n  useEffect(() => {\n    setLoading(true);\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYzU0Y2I3MjliYTc5OWE4NGNiOGRhOWYzYjNjMmVkYiIsInN1YiI6IjY0NzRhNGQ5OTQwOGVjMDBlMTRkODI0MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jM0pFTGW4Ag5RFeZbbYFfkH78J8eInez-TSfyWolnBg',\n      },\n    };\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      options\n    )\n      .then(response => response.json())\n      .then(response => {\n        const {\n          original_title,\n          poster_path,\n          overview,\n          genres,\n          release_date,\n          vote_average,\n        } = response;\n        setMovieName(original_title);\n        setPoster(poster_path);\n        setOverview(overview);\n        setGenres(genres);\n        setReleaseDate(release_date.slice(0, 4));\n        setScore(vote_average * 10);\n      })\n      .catch(err => console.error(err))\n      .finally(() => {\n        setLoading(false)\n      });\n  }, [movieId]);\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <div className={scss.movieWrapper}>\n          <button className={scss.backButton}>\n            <NavLink to={backLinkLocation.current}>Go Back</NavLink>\n          </button>\n          <div className={scss.movieInfo}>\n            {poster && (\n              <img\n                className={scss.movieImage}\n                src={`${baseImgUrl}${poster}`}\n                alt=\"img\"\n              ></img>\n            )}\n            <div className={scss.movieDescription}>\n              <h1 className={scss.movieCapture}>\n                <span className={scss.movieName}>{movieName}</span>\n                <span className={scss.movieDate}>{`(${releaseDate})`}</span>\n              </h1>\n              <p className={scss.movieScore}>{`User score: ${score}%`}</p>\n              <div>\n                <h2 className={scss.movieTitle}>Overview</h2>\n                <p className={scss.movieOverview}>{overview}</p>\n              </div>\n              <div>\n                <h2 className={scss.movieTitle}>Genres</h2>\n                <p className={scss.movieGenres}>\n                  {genres.map(genr => {\n                    return (\n                      <span className={scss.movieGenre} key={genr.id}>\n                        {genr.name}\n                      </span>\n                    );\n                  })}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className={scss.aditionalInf}>\n            <h2 className={scss.aditionalTitle}>Aditional information</h2>\n            <div className={scss.linksWrapper}>\n              <div className={scss.movieLinks}>\n                <NavLink\n                  className={scss.movieLink}\n                  to={`cast`}\n                  state={{ from: location }}\n                >\n                  Cast\n                </NavLink>\n                <NavLink\n                  className={scss.movieLink}\n                  to={`reviews`}\n                  state={{ from: location }}\n                >\n                  Reviews\n                </NavLink>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","movieName","setMovieName","poster","setPoster","overview","setOverview","genres","setGenres","releaseDate","setReleaseDate","score","setScore","isLoading","setLoading","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetch","method","headers","accept","Authorization","then","response","json","original_title","poster_path","release_date","vote_average","slice","catch","err","console","error","finally","className","scss","to","current","src","alt","map","genr","name","id"],"sourceRoot":""}